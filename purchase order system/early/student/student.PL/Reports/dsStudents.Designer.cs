//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.9148
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace student.PL.Reports {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsStudents")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsStudents : global::System.Data.DataSet {
        
        private students_viewDataTable tablestudents_view;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dsStudents() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dsStudents(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["students_view"] != null)) {
                    base.Tables.Add(new students_viewDataTable(ds.Tables["students_view"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public students_viewDataTable students_view {
            get {
                return this.tablestudents_view;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dsStudents cln = ((dsStudents)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["students_view"] != null)) {
                    base.Tables.Add(new students_viewDataTable(ds.Tables["students_view"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tablestudents_view = ((students_viewDataTable)(base.Tables["students_view"]));
            if ((initTable == true)) {
                if ((this.tablestudents_view != null)) {
                    this.tablestudents_view.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dsStudents";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsStudents.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablestudents_view = new students_viewDataTable();
            base.Tables.Add(this.tablestudents_view);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializestudents_view() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsStudents ds = new dsStudents();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void students_viewRowChangeEventHandler(object sender, students_viewRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class students_viewDataTable : global::System.Data.TypedTableBase<students_viewRow> {
            
            private global::System.Data.DataColumn columnSTUDENT_ID;
            
            private global::System.Data.DataColumn columnSTRAND_ID;
            
            private global::System.Data.DataColumn columnLRN;
            
            private global::System.Data.DataColumn columnFULL_NAME;
            
            private global::System.Data.DataColumn columnLAST_NAME;
            
            private global::System.Data.DataColumn columnFIRST_NAME;
            
            private global::System.Data.DataColumn columnMIDDLE_INITIAL;
            
            private global::System.Data.DataColumn columnADDRESS;
            
            private global::System.Data.DataColumn columnPARENTS_OR_GUARDIAN;
            
            private global::System.Data.DataColumn columnCONTACT_NUMBER;
            
            private global::System.Data.DataColumn columnLAST_SCHOOL_ATTENDED;
            
            private global::System.Data.DataColumn columnSCHOOL_YEAR;
            
            private global::System.Data.DataColumn columnSTRAND;
            
            private global::System.Data.DataColumn columnYEAR_LEVEL;
            
            private global::System.Data.DataColumn columnDESCRIPTION;
            
            private global::System.Data.DataColumn columnDATE_ADDED;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public students_viewDataTable() {
                this.TableName = "students_view";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal students_viewDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected students_viewDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn STUDENT_IDColumn {
                get {
                    return this.columnSTUDENT_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn STRAND_IDColumn {
                get {
                    return this.columnSTRAND_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LRNColumn {
                get {
                    return this.columnLRN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FULL_NAMEColumn {
                get {
                    return this.columnFULL_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LAST_NAMEColumn {
                get {
                    return this.columnLAST_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FIRST_NAMEColumn {
                get {
                    return this.columnFIRST_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MIDDLE_INITIALColumn {
                get {
                    return this.columnMIDDLE_INITIAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ADDRESSColumn {
                get {
                    return this.columnADDRESS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PARENTS_OR_GUARDIANColumn {
                get {
                    return this.columnPARENTS_OR_GUARDIAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CONTACT_NUMBERColumn {
                get {
                    return this.columnCONTACT_NUMBER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LAST_SCHOOL_ATTENDEDColumn {
                get {
                    return this.columnLAST_SCHOOL_ATTENDED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SCHOOL_YEARColumn {
                get {
                    return this.columnSCHOOL_YEAR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn STRANDColumn {
                get {
                    return this.columnSTRAND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn YEAR_LEVELColumn {
                get {
                    return this.columnYEAR_LEVEL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DESCRIPTIONColumn {
                get {
                    return this.columnDESCRIPTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DATE_ADDEDColumn {
                get {
                    return this.columnDATE_ADDED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public students_viewRow this[int index] {
                get {
                    return ((students_viewRow)(this.Rows[index]));
                }
            }
            
            public event students_viewRowChangeEventHandler students_viewRowChanging;
            
            public event students_viewRowChangeEventHandler students_viewRowChanged;
            
            public event students_viewRowChangeEventHandler students_viewRowDeleting;
            
            public event students_viewRowChangeEventHandler students_viewRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addstudents_viewRow(students_viewRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public students_viewRow Addstudents_viewRow(
                        string STUDENT_ID, 
                        string STRAND_ID, 
                        string LRN, 
                        string FULL_NAME, 
                        string LAST_NAME, 
                        string FIRST_NAME, 
                        string MIDDLE_INITIAL, 
                        string ADDRESS, 
                        string PARENTS_OR_GUARDIAN, 
                        string CONTACT_NUMBER, 
                        string LAST_SCHOOL_ATTENDED, 
                        string SCHOOL_YEAR, 
                        string STRAND, 
                        string YEAR_LEVEL, 
                        string DESCRIPTION, 
                        string DATE_ADDED) {
                students_viewRow rowstudents_viewRow = ((students_viewRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        STUDENT_ID,
                        STRAND_ID,
                        LRN,
                        FULL_NAME,
                        LAST_NAME,
                        FIRST_NAME,
                        MIDDLE_INITIAL,
                        ADDRESS,
                        PARENTS_OR_GUARDIAN,
                        CONTACT_NUMBER,
                        LAST_SCHOOL_ATTENDED,
                        SCHOOL_YEAR,
                        STRAND,
                        YEAR_LEVEL,
                        DESCRIPTION,
                        DATE_ADDED};
                rowstudents_viewRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowstudents_viewRow);
                return rowstudents_viewRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                students_viewDataTable cln = ((students_viewDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new students_viewDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSTUDENT_ID = base.Columns["STUDENT ID"];
                this.columnSTRAND_ID = base.Columns["STRAND ID"];
                this.columnLRN = base.Columns["LRN"];
                this.columnFULL_NAME = base.Columns["FULL NAME"];
                this.columnLAST_NAME = base.Columns["LAST NAME"];
                this.columnFIRST_NAME = base.Columns["FIRST NAME"];
                this.columnMIDDLE_INITIAL = base.Columns["MIDDLE INITIAL"];
                this.columnADDRESS = base.Columns["ADDRESS"];
                this.columnPARENTS_OR_GUARDIAN = base.Columns["PARENTS OR GUARDIAN"];
                this.columnCONTACT_NUMBER = base.Columns["CONTACT NUMBER"];
                this.columnLAST_SCHOOL_ATTENDED = base.Columns["LAST SCHOOL ATTENDED"];
                this.columnSCHOOL_YEAR = base.Columns["SCHOOL YEAR"];
                this.columnSTRAND = base.Columns["STRAND"];
                this.columnYEAR_LEVEL = base.Columns["YEAR LEVEL"];
                this.columnDESCRIPTION = base.Columns["DESCRIPTION"];
                this.columnDATE_ADDED = base.Columns["DATE ADDED"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSTUDENT_ID = new global::System.Data.DataColumn("STUDENT ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTUDENT_ID);
                this.columnSTRAND_ID = new global::System.Data.DataColumn("STRAND ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTRAND_ID);
                this.columnLRN = new global::System.Data.DataColumn("LRN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLRN);
                this.columnFULL_NAME = new global::System.Data.DataColumn("FULL NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFULL_NAME);
                this.columnLAST_NAME = new global::System.Data.DataColumn("LAST NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLAST_NAME);
                this.columnFIRST_NAME = new global::System.Data.DataColumn("FIRST NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFIRST_NAME);
                this.columnMIDDLE_INITIAL = new global::System.Data.DataColumn("MIDDLE INITIAL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMIDDLE_INITIAL);
                this.columnADDRESS = new global::System.Data.DataColumn("ADDRESS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADDRESS);
                this.columnPARENTS_OR_GUARDIAN = new global::System.Data.DataColumn("PARENTS OR GUARDIAN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPARENTS_OR_GUARDIAN);
                this.columnCONTACT_NUMBER = new global::System.Data.DataColumn("CONTACT NUMBER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCONTACT_NUMBER);
                this.columnLAST_SCHOOL_ATTENDED = new global::System.Data.DataColumn("LAST SCHOOL ATTENDED", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLAST_SCHOOL_ATTENDED);
                this.columnSCHOOL_YEAR = new global::System.Data.DataColumn("SCHOOL YEAR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSCHOOL_YEAR);
                this.columnSTRAND = new global::System.Data.DataColumn("STRAND", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTRAND);
                this.columnYEAR_LEVEL = new global::System.Data.DataColumn("YEAR LEVEL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYEAR_LEVEL);
                this.columnDESCRIPTION = new global::System.Data.DataColumn("DESCRIPTION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESCRIPTION);
                this.columnDATE_ADDED = new global::System.Data.DataColumn("DATE ADDED", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATE_ADDED);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public students_viewRow Newstudents_viewRow() {
                return ((students_viewRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new students_viewRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(students_viewRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.students_viewRowChanged != null)) {
                    this.students_viewRowChanged(this, new students_viewRowChangeEvent(((students_viewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.students_viewRowChanging != null)) {
                    this.students_viewRowChanging(this, new students_viewRowChangeEvent(((students_viewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.students_viewRowDeleted != null)) {
                    this.students_viewRowDeleted(this, new students_viewRowChangeEvent(((students_viewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.students_viewRowDeleting != null)) {
                    this.students_viewRowDeleting(this, new students_viewRowChangeEvent(((students_viewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removestudents_viewRow(students_viewRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsStudents ds = new dsStudents();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "students_viewDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class students_viewRow : global::System.Data.DataRow {
            
            private students_viewDataTable tablestudents_view;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal students_viewRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablestudents_view = ((students_viewDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string STUDENT_ID {
                get {
                    try {
                        return ((string)(this[this.tablestudents_view.STUDENT_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STUDENT ID\' in table \'students_view\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestudents_view.STUDENT_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string STRAND_ID {
                get {
                    try {
                        return ((string)(this[this.tablestudents_view.STRAND_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STRAND ID\' in table \'students_view\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestudents_view.STRAND_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LRN {
                get {
                    try {
                        return ((string)(this[this.tablestudents_view.LRNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LRN\' in table \'students_view\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestudents_view.LRNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FULL_NAME {
                get {
                    try {
                        return ((string)(this[this.tablestudents_view.FULL_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FULL NAME\' in table \'students_view\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestudents_view.FULL_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LAST_NAME {
                get {
                    try {
                        return ((string)(this[this.tablestudents_view.LAST_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LAST NAME\' in table \'students_view\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestudents_view.LAST_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FIRST_NAME {
                get {
                    try {
                        return ((string)(this[this.tablestudents_view.FIRST_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FIRST NAME\' in table \'students_view\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestudents_view.FIRST_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MIDDLE_INITIAL {
                get {
                    try {
                        return ((string)(this[this.tablestudents_view.MIDDLE_INITIALColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MIDDLE INITIAL\' in table \'students_view\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestudents_view.MIDDLE_INITIALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ADDRESS {
                get {
                    try {
                        return ((string)(this[this.tablestudents_view.ADDRESSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ADDRESS\' in table \'students_view\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestudents_view.ADDRESSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PARENTS_OR_GUARDIAN {
                get {
                    try {
                        return ((string)(this[this.tablestudents_view.PARENTS_OR_GUARDIANColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PARENTS OR GUARDIAN\' in table \'students_view\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestudents_view.PARENTS_OR_GUARDIANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CONTACT_NUMBER {
                get {
                    try {
                        return ((string)(this[this.tablestudents_view.CONTACT_NUMBERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CONTACT NUMBER\' in table \'students_view\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestudents_view.CONTACT_NUMBERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LAST_SCHOOL_ATTENDED {
                get {
                    try {
                        return ((string)(this[this.tablestudents_view.LAST_SCHOOL_ATTENDEDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LAST SCHOOL ATTENDED\' in table \'students_view\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestudents_view.LAST_SCHOOL_ATTENDEDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SCHOOL_YEAR {
                get {
                    try {
                        return ((string)(this[this.tablestudents_view.SCHOOL_YEARColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SCHOOL YEAR\' in table \'students_view\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestudents_view.SCHOOL_YEARColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string STRAND {
                get {
                    try {
                        return ((string)(this[this.tablestudents_view.STRANDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STRAND\' in table \'students_view\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestudents_view.STRANDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string YEAR_LEVEL {
                get {
                    try {
                        return ((string)(this[this.tablestudents_view.YEAR_LEVELColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'YEAR LEVEL\' in table \'students_view\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestudents_view.YEAR_LEVELColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DESCRIPTION {
                get {
                    try {
                        return ((string)(this[this.tablestudents_view.DESCRIPTIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DESCRIPTION\' in table \'students_view\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestudents_view.DESCRIPTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DATE_ADDED {
                get {
                    try {
                        return ((string)(this[this.tablestudents_view.DATE_ADDEDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DATE ADDED\' in table \'students_view\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestudents_view.DATE_ADDEDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSTUDENT_IDNull() {
                return this.IsNull(this.tablestudents_view.STUDENT_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSTUDENT_IDNull() {
                this[this.tablestudents_view.STUDENT_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSTRAND_IDNull() {
                return this.IsNull(this.tablestudents_view.STRAND_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSTRAND_IDNull() {
                this[this.tablestudents_view.STRAND_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLRNNull() {
                return this.IsNull(this.tablestudents_view.LRNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLRNNull() {
                this[this.tablestudents_view.LRNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFULL_NAMENull() {
                return this.IsNull(this.tablestudents_view.FULL_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFULL_NAMENull() {
                this[this.tablestudents_view.FULL_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLAST_NAMENull() {
                return this.IsNull(this.tablestudents_view.LAST_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLAST_NAMENull() {
                this[this.tablestudents_view.LAST_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFIRST_NAMENull() {
                return this.IsNull(this.tablestudents_view.FIRST_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFIRST_NAMENull() {
                this[this.tablestudents_view.FIRST_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMIDDLE_INITIALNull() {
                return this.IsNull(this.tablestudents_view.MIDDLE_INITIALColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMIDDLE_INITIALNull() {
                this[this.tablestudents_view.MIDDLE_INITIALColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsADDRESSNull() {
                return this.IsNull(this.tablestudents_view.ADDRESSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetADDRESSNull() {
                this[this.tablestudents_view.ADDRESSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPARENTS_OR_GUARDIANNull() {
                return this.IsNull(this.tablestudents_view.PARENTS_OR_GUARDIANColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPARENTS_OR_GUARDIANNull() {
                this[this.tablestudents_view.PARENTS_OR_GUARDIANColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCONTACT_NUMBERNull() {
                return this.IsNull(this.tablestudents_view.CONTACT_NUMBERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCONTACT_NUMBERNull() {
                this[this.tablestudents_view.CONTACT_NUMBERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLAST_SCHOOL_ATTENDEDNull() {
                return this.IsNull(this.tablestudents_view.LAST_SCHOOL_ATTENDEDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLAST_SCHOOL_ATTENDEDNull() {
                this[this.tablestudents_view.LAST_SCHOOL_ATTENDEDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSCHOOL_YEARNull() {
                return this.IsNull(this.tablestudents_view.SCHOOL_YEARColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSCHOOL_YEARNull() {
                this[this.tablestudents_view.SCHOOL_YEARColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSTRANDNull() {
                return this.IsNull(this.tablestudents_view.STRANDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSTRANDNull() {
                this[this.tablestudents_view.STRANDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsYEAR_LEVELNull() {
                return this.IsNull(this.tablestudents_view.YEAR_LEVELColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetYEAR_LEVELNull() {
                this[this.tablestudents_view.YEAR_LEVELColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDESCRIPTIONNull() {
                return this.IsNull(this.tablestudents_view.DESCRIPTIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDESCRIPTIONNull() {
                this[this.tablestudents_view.DESCRIPTIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDATE_ADDEDNull() {
                return this.IsNull(this.tablestudents_view.DATE_ADDEDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDATE_ADDEDNull() {
                this[this.tablestudents_view.DATE_ADDEDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class students_viewRowChangeEvent : global::System.EventArgs {
            
            private students_viewRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public students_viewRowChangeEvent(students_viewRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public students_viewRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591